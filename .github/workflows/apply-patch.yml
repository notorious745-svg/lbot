name: Apply patch v3
on:
  issue_comment:
    types: [created]

permissions:
  contents: write           # ให้สิทธิ์ push
  pull-requests: write      # ให้สิทธิ์เปิด PR

jobs:
  apply:
    if: contains(github.event.comment.body, '/apply-patch')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full) with token
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Show git info (debug)
        run: |
          git --version
          git remote -v
          git status
          echo "Actor=${{ github.actor }}"
          echo "Ref=${{ github.ref }}"
          echo "SHA=${{ github.sha }}"

      - name: Extract patch from comment (robust)
        id: extract
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.comment.body || '';
            // 1) ```patch / ```diff
            let m = body.match(/^[>\s]*```(?:patch|diff)\s*\r?\n([\s\S]*?)\r?\n[>\s]*```/im);
            // 2) fallback: any fenced code block
            if (!m) m = body.match(/^[>\s]*```\s*\r?\n([\s\S]*?)\r?\n[>\s]*```/im);
            if (!m) core.setFailed('No fenced code block found in the comment.');
            else core.setOutput('patch', m[1]);

      - name: Save patch file
        run: |
          printf "%s" "${{ steps.extract.outputs.patch }}" > change.patch
          echo "----- patch preview (first 30 lines) -----"
          head -n 30 change.patch || true

      - name: Create work branch
        id: mkbranch
        run: |
          BR="patch/apply-${{ github.run_id }}"
          git switch -c "$BR"
          echo "branch=$BR" >> $GITHUB_OUTPUT

      - name: Apply patch
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # อดทน whitespace และ path
          git apply -p0 --whitespace=nowarn change.patch
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit (patch empty)."
            exit 0
          fi
          git commit -m "apply-patch from issue #${{ github.event.issue.number }} by @${{ github.actor }}"

      - name: Push branch
        run: |
          git push origin "${{ steps.mkbranch.outputs.branch }}"

      - name: Open PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --base main \
            --head "${{ steps.mkbranch.outputs.branch }}" \
            --title "Apply patch from issue #${{ github.event.issue.number }}" \
            --body "Created by workflow. Actor: @${{ github.actor }}."
