name: PR Merge Guard

on:
  workflow_run:
    workflows: ["L-Bot CI"]
    types: [completed]

permissions:
  contents: read
  pull-requests: write

jobs:
  guard:
    runs-on: ubuntu-latest
    steps:
      - name: Guard merge using draft PR
        uses: actions/github-script@v7
        with:
          script: |
            const wr = context.payload.workflow_run
            const prs = wr.pull_requests || []
            if (prs.length === 0) { core.info('No PR associated'); return }

            const pr = prs[0]
            const owner = context.repo.owner
            const repo  = context.repo.repo
            const num   = pr.number
            const ok = wr.conclusion === 'success'

            if (!ok) {
              await github.request('POST /repos/{owner}/{repo}/pulls/{pull_number}/convert-to-draft', {
                owner, repo, pull_number: num
              })
              await github.rest.issues.addLabels({owner, repo, issue_number: num, labels: ['blocked: CI failed']})
              core.notice(`PR #${num} converted to DRAFT (CI failed)`)
            } else {
              // mark ready for review (will fail harmlessly if already ready)
              try {
                await github.request('POST /repos/{owner}/{repo}/pulls/{pull_number}/ready-for-review', {
                  owner, repo, pull_number: num
                })
              } catch (e) { core.info('Already ready for review') }
              await github.rest.issues.removeLabel({owner, repo, issue_number: num, name: 'blocked: CI failed'}).catch(()=>{})
              core.notice(`PR #${num} is READY (CI passed)`)
            }
